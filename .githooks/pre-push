#!/usr/bin/php
<?php

namespace WordCamp\Git_Hooks\Pre_Push;

/*
 * The functionality from `pre-commit` should probably be moved here, because `pre-push` is a better workflow,
 * and PHP is a much better scripting language.
 */

// todo test running in non-root path

$color_red   = "\033[31m";
$color_reset = "\033[m";

main();


function main() {
	global $color_red, $color_reset;

	$current_branch = trim( shell_exec( "/usr/bin/git rev-parse --abbrev-ref HEAD 2>&1" ) );

	/*
	 * Only run this hook on finished commits that are ready for production. It should be skipped during
	 * the development process, in order to keep a frictionless workflow.
	 */
	if ( 'git-pre-push-lint' !== $current_branch ) {
		// todo change to 'production' when done testing
		exit( 0 );
	}

	/*
	 * Other workspaces can be added once they pass the linters on the `production` branch, or this has the
	 * ability to run on only changed lines.
	 */
	$workspaces = array(
		'wordcamp-blocks'           => 'mu-plugins/blocks',
		'virtual-embeds'            => 'mu-plugins/virtual-embeds',
		'wordcamp-speaker-feedback' => 'plugins/wordcamp-speaker-feedback',
	);

	#todo must must be run in root folder if keeping --relative arg
	$changed_files = shell_exec( '/usr/bin/git diff origin/production --name-only --relative' );

	$errors = js_css_lint( $workspaces, $changed_files );

	if ( $errors ) {
		echo "\n\n{$color_red}Please fix the errors above, or intentionally bypass this with `git push --no-verify`.{$color_reset}\n\n";
	} else {
		echo "\nSuccess.\n\n";
	}

	exit( (int) $errors );
}

/**
 * Lint JavaScript and CSS files.
 *
 * @param array  $workspaces
 * @param string $changed_files
 *
 * @return bool
 */
function js_css_lint( $workspaces, $changed_files ) {
	$errors = false;

	foreach ( $workspaces as $name => $path ) {
		if ( false !== strpos( $changed_files, $path ) ) {
			echo "\nLinting $name workspace... ";

			exec( 'yarn --silent workspace ' . $name . ' lint:js 2>&1', $lint_js_output, $exec_exit_status );

			if ( $exec_exit_status ) {
				$errors = true;
				echo "\n\n" . implode( "\n", $lint_js_output );
			}

			exec( 'yarn --silent workspace ' . $name . ' lint:css 2>&1', $lint_css_output, $exec_exit_status );

			if ( $exec_exit_status ) {
				echo "\n\n" . implode( "\n", $lint_css_output );
			}
		}
	}

	return $errors;
}
